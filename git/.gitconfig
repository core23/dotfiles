[alias]
    a = commit --amend
    b = branch -vv
    bd = "!git for-each-ref --format='%(committerdate:iso8601) %(committerdate:relative) %(refname)' --sort -committerdate refs/heads/"
    chk = checkout -b
    up = pull
    p = push
    fp = push --force-with-lease
    pa = "!git remote | xargs -L1 git push --all"
    s = status -s
    df = diff --color --color-words --abbrev
    dff = diff --name-only --diff-filter=U
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
    tlg = "!git log $(git describe --tags --abbrev=0)..HEAD --oneline"
    sl = log --pretty=oneline --abbrev-commit
    f = fetch --all --prune --tags
    bat = "!sh -c 'find . -name .git -type d -prune -exec git --git-dir={} --work-tree=$PWD/{} --no-pager $@ \\;' -"
    batv = "!sh -c 'find . -name .git -type d -prune -exec dirname {} \\; -exec git --git-dir={} --work-tree=$PWD/{} --no-pager $@ \\; -exec echo \\; ' -"

    # Show the diff between the latest commit and the current state
    d = "!git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

    # Clean all branches that are merged into remote master
    cln-origin = "!git branch --merged origin/master | grep -v '\\*' | grep -v master | xargs -n 1 git branch -d"
    cln-upstream = "!git branch --merged upstream/master | grep -v '\\*' | grep -v master | xargs -n 1 git branch -d"

    # Rebase
    rbo = "!git fetch origin && git rebase --interactive --autosquash origin/master"
    rbu = "!git fetch upstream && git rebase --interactive --autosquash upstream/master"
    rb-fix = !sh -c 'git rebase --interactive "$1" --exec "php-cs-fixer fix"'
    ra = rebase --abort
    rc = rebase --continue
    rb = rebase --interactive

    # Reset the branch to the latest remote master
    rh = reset --hard
    rso = "!git fetch origin && git reset --hard origin/master"
    rsu = "!git fetch upstream && git reset --hard upstream/master"

    # Show contributors of the project
    who = shortlog -n -s --no-merges

    # List all new commits
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'

    # Show all git aliases
    alias = config --get-regexp alias

[core]
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
	autocrlf = input

[commit]
    gpgsign = true

[merge]
    tool = opendiff

# rewrites of repo paths
[url "git@github.com:"]
    insteadOf = "gh:"
    insteadOf = "git://github.com"
    insteadOf = "github:"
    insteadOf = "git://github.com/"
    insteadOf = "https://github.com/"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    insteadOf = "gist:"
    insteadOf = "git://gist.github.com/"
    insteadOf = "https://gist.github.com/"

[url "git@gitlab.com:"]
    insteadOf = "gl:"
    insteadOf = "git://gitlab.com"
    insteadOf = "gitlab:"
    insteadOf = "git://gitlab.com/"
    insteadOf = "https://gitlab.com/"

[url "git@bitbucket.org:"]
    insteadOf = "bb:"
    insteadOf = "git://bitbucket.org"
    insteadOf = "bitbucket:"
    insteadOf = "git://bitbucket.org/"
    insteadOf = "https://bitbucket.org/"

[help]
    autocorrect = 1

[fetch]
    prune = 1

[pull]
    rebase = true

[push]
    default = current
    followTags = true

[rebase]
    autoStash = true
    autosquash = true
    instructionFormat = "[%an @ %ar] %s"

[rerere]
    enabled = true

# use separate file for username / github token / etc
[include]
    path = ~/.gitconfig.local
